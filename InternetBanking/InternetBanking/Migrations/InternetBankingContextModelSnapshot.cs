// <auto-generated />
using System;
using InternetBanking.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternetBanking.Migrations
{
    [DbContext(typeof(InternetBankingContext))]
    partial class InternetBankingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InternetBanking.Areas.Identity.Data.InternetBankingUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Models.Account", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("CustomerPersonalId")
<<<<<<< HEAD
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");
=======
                        .HasColumnType("nvarchar(450)");
>>>>>>> parent of c480796 (update models)

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InternetBankingUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OpenDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("AccountNumber");

<<<<<<< HEAD
                    b.HasIndex("InternetBankingUserId");
=======
                    b.HasIndex("CustomerPersonalId");
>>>>>>> parent of c480796 (update models)

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("InternetBanking.Models.Bank", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("InternetBanking.Models.Branch", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("BankId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("InternetBanking.Models.FAQ", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("FAQCategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("FAQCategoryId");

                    b.ToTable("FAQ");
                });

            modelBuilder.Entity("InternetBanking.Models.FAQCategory", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FAQCategories");
                });

            modelBuilder.Entity("InternetBanking.Models.HelpRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

<<<<<<< HEAD
                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");
=======
                    b.Property<string>("CustomerPersonalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeEmpId")
                        .HasColumnType("nvarchar(450)");
>>>>>>> parent of c480796 (update models)

                    b.Property<string>("HelpRequestImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HelpRequestTypeRequestTypeId")
                        .HasColumnType("int");

                    b.Property<string>("InternetBankingUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

<<<<<<< HEAD
=======
                    b.HasIndex("CustomerPersonalId");

                    b.HasIndex("EmployeeEmpId");

>>>>>>> parent of c480796 (update models)
                    b.HasIndex("HelpRequestTypeRequestTypeId");

                    b.HasIndex("InternetBankingUserId");

                    b.ToTable("HelpRequests");
                });

            modelBuilder.Entity("InternetBanking.Models.HelpRequestType", b =>
                {
                    b.Property<int?>("RequestTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("RequestTypeId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RequestTypeId");

                    b.ToTable("HelpRequestsTypes");
                });

            modelBuilder.Entity("InternetBanking.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Avatar")
                        .HasColumnType("bit");

<<<<<<< HEAD
                    b.Property<string>("CustomerId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");
=======
                    b.Property<string>("CustomerPersonalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeEmpId")
                        .HasColumnType("nvarchar(450)");
>>>>>>> parent of c480796 (update models)

                    b.Property<int?>("HelpRequestId")
                        .HasColumnType("int");

                    b.Property<string>("InternetBankingUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RequestId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

<<<<<<< HEAD
=======
                    b.HasIndex("CustomerPersonalId");

                    b.HasIndex("EmployeeEmpId");

>>>>>>> parent of c480796 (update models)
                    b.HasIndex("HelpRequestId");

                    b.HasIndex("InternetBankingUserId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("InternetBanking.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double?>("Amount")
                        .IsRequired()
                        .HasColumnType("float");

<<<<<<< HEAD
                    b.Property<string>("CustomerId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");
=======
                    b.Property<string>("CustomerPersonalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeEmpId")
                        .HasColumnType("nvarchar(450)");
>>>>>>> parent of c480796 (update models)

                    b.Property<DateTime?>("ExpireDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<double?>("Interest")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("InternetBankingUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("IssueDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("LoanTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

<<<<<<< HEAD
                    b.HasIndex("InternetBankingUserId");
=======
                    b.HasIndex("CustomerPersonalId");

                    b.HasIndex("EmployeeEmpId");
>>>>>>> parent of c480796 (update models)

                    b.HasIndex("LoanTypeId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("InternetBanking.Models.LoanType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("Period")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LoanTypes");
                });

            modelBuilder.Entity("InternetBanking.Models.Service", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(20)");

                    b.Property<double?>("Amount")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerPersonalId")
<<<<<<< HEAD
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternetBankingUserId")
=======
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeEmpId")
>>>>>>> parent of c480796 (update models)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ServiceAccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ServiceTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber");

<<<<<<< HEAD
                    b.HasIndex("InternetBankingUserId");
=======
                    b.HasIndex("CustomerPersonalId");

                    b.HasIndex("EmployeeEmpId");
>>>>>>> parent of c480796 (update models)

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("InternetBanking.Models.ServiceType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ServicesTypes");
                });

            modelBuilder.Entity("InternetBanking.Models.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ReceiverAccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SenderAccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Models.Account", b =>
                {
                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", null)
                        .WithMany("Accounts")
<<<<<<< HEAD
                        .HasForeignKey("InternetBankingUserId");
=======
                        .HasForeignKey("CustomerPersonalId");
                });

            modelBuilder.Entity("InternetBanking.Models.Customer", b =>
                {
                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", "InternetBankingUser")
                        .WithOne("Customer")
                        .HasForeignKey("InternetBanking.Models.Customer", "PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternetBankingUser");
                });

            modelBuilder.Entity("InternetBanking.Models.Employee", b =>
                {
                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", "InternetBankingUser")
                        .WithOne("Employee")
                        .HasForeignKey("InternetBanking.Models.Employee", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternetBankingUser");
>>>>>>> parent of c480796 (update models)
                });

            modelBuilder.Entity("InternetBanking.Models.FAQ", b =>
                {
                    b.HasOne("InternetBanking.Models.FAQCategory", null)
                        .WithMany("FAQ")
                        .HasForeignKey("FAQCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternetBanking.Models.HelpRequest", b =>
                {
                    b.HasOne("InternetBanking.Models.Account", null)
                        .WithMany("HelpRequests")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

<<<<<<< HEAD
=======
                    b.HasOne("InternetBanking.Models.Customer", null)
                        .WithMany("HelpRequests")
                        .HasForeignKey("CustomerPersonalId");

                    b.HasOne("InternetBanking.Models.Employee", null)
                        .WithMany("HelpRequests")
                        .HasForeignKey("EmployeeEmpId");

>>>>>>> parent of c480796 (update models)
                    b.HasOne("InternetBanking.Models.HelpRequestType", null)
                        .WithMany("HelpRequests")
                        .HasForeignKey("HelpRequestTypeRequestTypeId");

                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", null)
                        .WithMany("HelpRequests")
                        .HasForeignKey("InternetBankingUserId");
                });

            modelBuilder.Entity("InternetBanking.Models.Image", b =>
                {
<<<<<<< HEAD
=======
                    b.HasOne("InternetBanking.Models.Customer", null)
                        .WithMany("Images")
                        .HasForeignKey("CustomerPersonalId");

                    b.HasOne("InternetBanking.Models.Employee", null)
                        .WithMany("Images")
                        .HasForeignKey("EmployeeEmpId");

>>>>>>> parent of c480796 (update models)
                    b.HasOne("InternetBanking.Models.HelpRequest", null)
                        .WithMany("Images")
                        .HasForeignKey("HelpRequestId");

                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", null)
                        .WithMany("Images")
                        .HasForeignKey("InternetBankingUserId");
                });

            modelBuilder.Entity("InternetBanking.Models.Loan", b =>
                {
                    b.HasOne("InternetBanking.Models.Account", null)
                        .WithMany("Loans")
                        .HasForeignKey("AccountId");

                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", null)
                        .WithMany("Loans")
<<<<<<< HEAD
                        .HasForeignKey("InternetBankingUserId");
=======
                        .HasForeignKey("CustomerPersonalId");

                    b.HasOne("InternetBanking.Models.Employee", null)
                        .WithMany("Loans")
                        .HasForeignKey("EmployeeEmpId");
>>>>>>> parent of c480796 (update models)

                    b.HasOne("InternetBanking.Models.LoanType", null)
                        .WithMany("Loans")
                        .HasForeignKey("LoanTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternetBanking.Models.Service", b =>
                {
                    b.HasOne("InternetBanking.Models.Account", null)
                        .WithMany("Services")
                        .HasForeignKey("AccountNumber");

                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", null)
                        .WithMany("Services")
<<<<<<< HEAD
                        .HasForeignKey("InternetBankingUserId");
=======
                        .HasForeignKey("CustomerPersonalId");

                    b.HasOne("InternetBanking.Models.Employee", null)
                        .WithMany("Services")
                        .HasForeignKey("EmployeeEmpId");
>>>>>>> parent of c480796 (update models)

                    b.HasOne("InternetBanking.Models.ServiceType", null)
                        .WithMany("Services")
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternetBanking.Models.Transaction", b =>
                {
                    b.HasOne("InternetBanking.Models.Account", null)
                        .WithMany("Transactions")
                        .HasForeignKey("AccountNumber");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("InternetBanking.Areas.Identity.Data.InternetBankingUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternetBanking.Areas.Identity.Data.InternetBankingUser", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("HelpRequests");

                    b.Navigation("Images");

                    b.Navigation("Loans");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("InternetBanking.Models.Account", b =>
                {
                    b.Navigation("HelpRequests");

                    b.Navigation("Loans");

                    b.Navigation("Services");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("InternetBanking.Models.FAQCategory", b =>
                {
                    b.Navigation("FAQ");
                });

            modelBuilder.Entity("InternetBanking.Models.HelpRequest", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("InternetBanking.Models.HelpRequestType", b =>
                {
                    b.Navigation("HelpRequests");
                });

            modelBuilder.Entity("InternetBanking.Models.LoanType", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("InternetBanking.Models.ServiceType", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
